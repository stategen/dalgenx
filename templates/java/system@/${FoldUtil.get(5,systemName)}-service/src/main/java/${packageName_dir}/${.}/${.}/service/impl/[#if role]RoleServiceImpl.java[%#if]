/*
 * Copyright (c) 2016 - 2116 All Rights Reserved.
 * Powered By [rapid-generator]
 */
package ${packageName}.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.CollectionUtil;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import ${packageName}.dao.RoleDao;
import ${packageName}.domain.Menu;
import ${packageName}.domain.Role;
import ${packageName}.domain.RoleMenu;
import ${packageName}.service.MenuService;
import ${packageName}.service.RoleMenuService;
import ${packageName}.service.RoleService;

/**
 * RoleServiceImpl
 * <pre>
 * database table: role
 * database table comments: Role
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class RoleServiceImpl implements RoleService {

    @Resource
    MenuService menuService;

    @Resource
    RoleMenuService roleMenuService;

    @Override
    public List<Menu> getAllMenusWithRoleChecked(String roleId) {
        List<Menu> menus = this.menuService.getMenusByProjectName( null);
        List<Long> menuIds = CollectionUtil.toList(menus, Menu::getMenuId);
        List<RoleMenu> roleMenus = this.roleMenuService.getRoleMenusByMenuIds(menuIds);
        Map<Long, RoleMenu> menuIdRoleMenuMap = CollectionUtil.toMap(roleMenus, RoleMenu::getMenuId);
        for (Menu menu : menus) {
            menu.setRoleId(roleId);
            Long menuId = menu.getMenuId();
            menu.setChecked(menuIdRoleMenuMap.containsKey(menuId));
        }
        return menus;
    }

}
