<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${packageName}</groupId>
    <artifactId>${systemName?uncap_first}-parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>0-${systemName?uncap_first}-parent</name>

    <modules>
        <module>1-${systemName?uncap_first}-pojo</module>
        <module>2-${systemName?uncap_first}-facade</module>
        <module>3-${systemName?uncap_first}-intergrade</module>
        <module>4-${systemName?uncap_first}-dao</module>
        <module>5-${systemName?uncap_first}-service</module>
        <module>6-${systemName?uncap_first}-web-base</module>
    </modules>


    <properties>
        <stategen-version>stg.2.3.0.RELEASE</stategen-version>
        <stategen-layer.pom.version>stgp.1.0-stg.2.3.0.RELEASE</stategen-layer.pom.version>
        
        <!-- 发到公司私有maven仓库中，即pojo和facade(dubbo服务的版本)，这个版本跟着pom.version一致 -->
        <${systemName?uncap_first}-facade-version>1.0.0</${systemName?uncap_first}-facade-version>
        <!-- 包含业务逻辑代码的jar，不能被发布到maven仓库中，故以snapshort结尾,请在nexus中控制禁止接收snapshot版本,避免误发 -->
        <system.version-SNAPSHOT>${systemName?uncap_first}-1.0.0-SNAPSHOT</system.version-SNAPSHOT>

        <!-- 当项目转会为spring-boot后，这个值必须与spring-boot内的值相同，否则会有兼容问题 -->
        <spring.version>5.2.3.RELEASE</spring.version>
        <spring.boot.version>2.2.3.RELEASE</spring.boot.version>
        <!-- 这个版本对应nacos是的1.3.x(不可上1.4),sentinel dashboard版本可以到 1.8 -->
        <alibaba.spring.cloud.version>2.2.3.RELEASE</alibaba.spring.cloud.version>
        <spring-data-redis-version>2.2.3.RELEASE</spring-data-redis-version>
        <dubbo-version>2.7.8</dubbo-version>
        <sentinel.version>1.8.0</sentinel.version>
        
        
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <gmaven-plugin.version>1.5</gmaven-plugin.version>
        <maven-shade-plugin.versiion>3.2.4</maven-shade-plugin.versiion>
        <maven-war-plugin.version>3.3.1</maven-war-plugin.version>        
        <!-- 文件拷贝时的编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <java.target.version>1.8</java.target.version>
        <!-- 解决eclipse中第一行报错 error line 1 -->
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>    
        <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <lombok-maven-plugin.version>1.18.16.0</lombok-maven-plugin.version> 
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>       
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>   
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <forbiddenapis.version>3.1</forbiddenapis.version>
    </properties>

    <distributionManagement>
        <repository>
            <id>thirdparty</id>
            <url>http://nexus:8081/content/repositories/thirdparty/</url>
        </repository>
    </distributionManagement>
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.12</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- @since stg.2.3.0.RELEASE,架构层jar3由架构上各层自行维护，业务层维护自己的jars -->
            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-pojo-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-facade-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-intergrade-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-dao-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-service-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-web-base-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework.layers</groupId>
                <artifactId>stategen-layer-web-pom</artifactId>
                <version>${'${'}stategen-layer.pom.version}</version>
                <type>pom</type>
            </dependency>

		
            <dependency>
                <groupId>${packageName}</groupId>
                <artifactId>${systemName?uncap_first}-pojo</artifactId>
                <version>${'${'}${systemName?uncap_first}-facade-version}</version>
            </dependency>

            <dependency>
                <groupId>${packageName}</groupId>
                <artifactId>${systemName?uncap_first}-facade</artifactId>
                <version>${'${'}${systemName?uncap_first}-facade-version}</version>
            </dependency>

            <dependency>
                <groupId>${packageName}</groupId>
                <artifactId>${systemName?uncap_first}-intergrade</artifactId>
                <version>${'${'}system.version-SNAPSHOT}</version>
            </dependency>

            <dependency>
                <groupId>${packageName}</groupId>
                <artifactId>${systemName?uncap_first}-dao</artifactId>
                <version>${'${'}system.version-SNAPSHOT}</version>
            </dependency>

            <dependency>
                <groupId>${packageName}</groupId>
                <artifactId>${systemName?uncap_first}-service</artifactId>
                <version>${'${'}system.version-SNAPSHOT}</version>
            </dependency>

            <dependency>
                <groupId>${packageName}</groupId>
                <artifactId>${systemName?uncap_first}-web-base</artifactId>
                <version>${'${'}system.version-SNAPSHOT}</version>
            </dependency>
            
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${'${'}spring.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.stategen.framework</groupId>
                <artifactId>stategen-rapid-framework</artifactId>
                <version>${'${'}stategen-version}</version>
                <!-- 生成器 DevGenerator.java在test队段 -->
                <scope>test</scope>
            </dependency>
            

        </dependencies>
    </dependencyManagement>

    <build>
        <!-- springboot打包 -->
        <!--默认源代码目录 -->
        <sourceDirectory>src/main/java </sourceDirectory>
        <!--默认测试源代码目录 -->
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <!--默认资源目录 -->
        <!-- <resources>
            <resource>
            <directory>src/main/resources</directory>
            <includes>
            <include>**/*.*</include>
            </includes>
            <filtering>true</filtering>
            </resource>
            </resources> -->
        <!--默认测试资源目录 -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${'${'}maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${'${'}java.version}</source>
                        <target>${'${'}java.target.version}</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${'${'}maven-clean-plugin.version}</version>
                    <configuration>
                        <failOnError>true</failOnError>
                        <filesets>
                        </filesets>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${'${'}maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${'${'}lombok-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>delombok</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${'${'}maven-deploy-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                            <configuration>
                                <!-- 不发布到maven仓库 -->
                                <skip>true</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>exec-maven-plugin</artifactId>
                                        <versionRange>[1.6.0,)</versionRange>
                                        <goals>
                                            <goal>java</goal>
                                            <goal>exec</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
                <!-- springboot begin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${'${'}spring.boot.version}</version>
                    <configuration>
                        <addResources>true</addResources>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- springboot end -->

                <plugin>
                    <groupId>org.apache.maven.plugin</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${'${'}maven-war-plugin.version}</version>
                    <configuration>
                        <webXml>${'${'}basedir}WebRoot/WEB-INF/web.xml</webXml>
                        <!--如果没有这个plugin,maven->update project后，maven会自动创建src/main/webapp目录，
                            undertow在测试环境下，只要webapp目录存在，则静态资源这个目录加载
                            maven在会webapp生成和复制很多脏的class和jar, 导致最后war体积翻倍 -->
                        <warSourceDirectory>${'${'}basedir}/public</warSourceDirectory>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                    <version>${'${'}forbiddenapis.version}</version>
                    <configuration>
                        <internalRuntimeForbidden>false</internalRuntimeForbidden>
                        <failOnMissingClasses>false</failOnMissingClasses>
                        <failOnUnsupportedJava>true</failOnUnsupportedJava>
                        <signaturesFiles>
                            <signaturesFile>../forbiden.apis.txt</signaturesFile>
                        </signaturesFiles>
                        <!-- <bundledSignatures>
                            <bundledSignature>jdk-system-out</bundledSignature>
                        </bundledSignatures> -->
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>check</goal>
                                <goal>testCheck</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
            </plugin>

            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>