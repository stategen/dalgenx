/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package ${packageName}.service;

import java.util.List;
import java.util.Map;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.AssignService;

import ${packageName}.domain.Region;

/**
 * RegionService
 * <pre>
 * database table: region
 * database table comments: Region
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public interface RegionService extends AssignService<Region, Long>, RegionService${systemName?cap_first} {

    Map<Long, Region> getRegionMapIfHasParent(List<Long> regionIds);

    //<#--
    /**
     * 
     * @see ${packageName}.dao.RegionDao#insert
     */
    public Region insert(Region region);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#delete
     */
    public Long delete(Long regionId);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#update
     */
    public Region update(Region region);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#getRegionByRegionId
     */
    public Region getRegionByRegionId(Long regionId);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#getRegionPageList
     */
    public PageList<Region> getRegionPageList(Region region, int pageSize, int pageNum);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#getRegionsByRegionIds
     */
    public List<Region> getRegionsByRegionIds(java.util.List<Long> regionIds);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#deleteByRegionIds
     */
    public java.util.List<Long> deleteByRegionIds(java.util.List<Long> regionIds);

    /*** 保存region,有id时更新，没有id时插入,并带回新的id，返回 region
     * @see ${packageName}.dao.RegionDao#insert
     */
    public Region saveRegion(Region region);

    /** 批量保存regions,有id时更新，没有id时插入,并带回新的id，返回 regions
     * @see ${packageName}.dao.RegionDao#insert
     */
    public List<Region> saveRegions(List<Region> regions);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#getRegionOptions
     */
    public List<Region> getRegionOptions(List<Long> parentRegionIds);

    /**
     * 
     * @see ${packageName}.dao.RegionDao#getRegionsWithIsLeafByRegionIds
     */
    public List<Region> getRegionsWithIsLeafByRegionIds(java.util.List<Long> regionIds);
    //-->
    //
}
